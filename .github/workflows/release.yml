name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
                  
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: 24
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install
    
    - name: Build
      run: pnpm run build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend
        path: ./.output

  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Download Backend artifact
      uses: actions/download-artifact@v4
      with:
        name: backend
        path: ./.output

    - name: Create Output archive
      run: cd .output && zip -r ../movie-web.backend.zip .

    - name: Get version from package.json
      id: package-version
      uses: martinbeentjes/npm-get-version-action@main

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ steps.package-version.outputs.current-version }}
      run: |
        gh release create "v${VERSION}" \
          --title "Backend v${VERSION}" \
          --generate-notes \
          movie-web.backend.zip

  registry:
    name: Push to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.package-version.outputs.current-version }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max